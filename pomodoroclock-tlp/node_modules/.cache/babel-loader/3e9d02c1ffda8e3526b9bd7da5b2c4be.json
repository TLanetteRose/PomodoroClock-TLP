{"ast":null,"code":"//import React, {useState} from 'react';\nimport React, { Component } from 'react';\nimport '../src/styles/App.css';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft';\nimport Controllers from './components/Controllers';\nimport Sound from './components/Sound';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.audioBeep = React.createRef();\n    this.state = {\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 5),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 25),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 25) * 60,\n      isStart: false,\n      timerInterval: null\n    };\n    this.onIncreaseBreak = this.onIncreaseBreak.bind(this);\n    this.onDecreaseBreak = this.onDecreaseBreak.bind(this);\n    this.onIncreaseSession = this.onIncreaseSession.bind(this);\n    this.onDecreaseSession = this.onDecreaseSession.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onStartStop = this.onStartStop.bind(this);\n    this.decreaseTimer = this.decreaseTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n  }\n\n  onIncreaseBreak() {\n    if (this.state.breakLength < 60 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength + 1\n      });\n    }\n  }\n\n  onDecreaseBreak() {\n    if (this.state.breakLength > 1 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength - 1\n      });\n    }\n  }\n\n  onIncreaseSession() {\n    if (this.state.sessionLength < 60 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1,\n        timeLeftInSecond: (this.state.sessionLength + 1) * 60\n      });\n    }\n  }\n\n  onDecreaseSession() {\n    if (this.state.sessionLength > 1 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength - 1,\n        timeLeftInSecond: (this.state.sessionLength - 1) * 60\n      });\n    }\n  }\n\n  onReset() {\n    this.setState({\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 5),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 25),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 25) * 60,\n      isStart: false,\n      timerInterval: null\n    });\n    this.audioBeep.current.pause();\n    this.audioBeep.current.currentTime = 0;\n    this.state.timerInterval && clearInterval(this.state.timerInterval);\n  }\n\n  onStartStop() {\n    if (!this.state.isStart) {\n      this.setState({\n        isStart: !this.state.isStart,\n        timerInterval: setInterval(() => {\n          this.decreaseTimer();\n          this.phaseControl();\n        }, 1000)\n      });\n    } else {\n      this.audioBeep.current.pause();\n      this.audioBeep.current.currentTime = 0;\n      this.state.timerInterval && clearInterval(this.state.timerInterval);\n      this.setState({\n        isStart: !this.state.isStart,\n        timerInterval: null\n      });\n    }\n  }\n\n  decreaseTimer() {\n    this.setState({\n      timeLeftInSecond: this.state.timeLeftInSecond - 1\n    });\n  }\n\n} //Dev-To AryanJ Tutorial in commented out sections\n\n/*function App() {\n  const [breakLengthSeconds, setBreakLength] = useState(300);\n  const [sessionLengthSeconds, setSessionLength] = useState(60 * 25);\n\n  const decrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds - 60;\n    if (newBreakLength < 0) {\n      setBreakLength(0);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => setBreakLength(breakLengthSeconds + 60);\n\n  const decrementSessionLength = () => {\n    const newSessionLength = sessionLengthSeconds - 60;\n    if (newSessionLength < 0) {\n      setSessionLength(0);\n    } else {\n      setSessionLength(newSessionLength);\n    }\n  };\n  const incrementSessionLength = () =>\n  setSessionLength(sessionLengthSeconds + 60);\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <h1 className=\"app-title\">Rebel-Cow Pomodoro Clock</h1>\n        </div>\n\n        <div className=\"timeleft-container\">\n          <TimeLeft \n          sessionLengthSeconds={sessionLengthSeconds} />\n        </div>\n\n        <div className=\"control-container\">\n          <Controllers\n          />\n        </div>\n        \n        <div className=\"settings-container\">\n          <Break\n            breakLengthSeconds={breakLengthSeconds}\n            incrementBreakLength={incrementBreakLength}\n            decrementBreakLength={decrementBreakLength}\n          />\n          <Session\n            sessionLengthSeconds={sessionLengthSeconds}\n            incrementSessionLength={incrementSessionLength}\n            decrementSessionLength={decrementSessionLength}\n          />\n        </div>\n        <div className=\"sound-container\">\n          <Sound />\n        </div>\n        <div className=\"footer\">\n          <h3 className=\"footer-attribute\">\n            React JS Pomodoro Clock App created by{\" \"}\n            <a href=\"https://github.com/TLanetteRose\">\n              {\" \"}\n              <span> T.Lanette Pollard </span>\n            </a>{\" \"}\n            &nbsp; FreeCodeCamp Front End Libraries Project\n          </h3>\n        </div>\n      </div>\n    );\n  \n}*/\n//export default App;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js"],"names":["React","Component","Break","Session","TimeLeft","Controllers","Sound","App","constructor","props","audioBeep","createRef","state","breakLength","Number","parseInt","defaultBreakLength","sessionLength","defaultSessionLength","timeLabel","timeLeftInSecond","isStart","timerInterval","onIncreaseBreak","bind","onDecreaseBreak","onIncreaseSession","onDecreaseSession","onReset","onStartStop","decreaseTimer","phaseControl","setState","current","pause","currentTime","clearInterval","setInterval"],"mappings":"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","sourcesContent":["//import React, {useState} from 'react';\nimport React, {Component} from 'react';\nimport '../src/styles/App.css';\n\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft';\nimport Controllers from './components/Controllers';\nimport Sound from './components/Sound';\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.audioBeep = React.createRef();\n\n    this.state = {\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 5),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 25),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 25) * 60,\n      isStart: false,\n      timerInterval: null\n\n    }\n    this.onIncreaseBreak = this.onIncreaseBreak.bind(this);\n    this.onDecreaseBreak = this.onDecreaseBreak.bind(this);\n    this.onIncreaseSession = this.onIncreaseSession.bind(this);\n    this.onDecreaseSession = this.onDecreaseSession.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onStartStop = this.onStartStop.bind(this);\n    this.decreaseTimer = this.decreaseTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n\n  }\n  onIncreaseBreak() {\n    if(this.state.breakLength < 60 && !this.state.isStart){\n      this.setState({\n        breakLength: this.state.breakLength + 1\n      });\n    }\n  }\n\n  onDecreaseBreak() {\n    if (this.state.breakLength > 1 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength - 1\n      });\n    }\n  }\n\n  onIncreaseSession() {\n    if (this.state.sessionLength < 60 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1,\n        timeLeftInSecond: (this.state.sessionLength + 1) * 60\n      });\n    }\n  }\n\n   onDecreaseSession(){\n     if (this.state.sessionLength > 1 && !this.state.isStart) {\n       this.setState({\n         sessionLength: this.state.sessionLength - 1,\n         timeLeftInSecond: (this.state.sessionLength - 1) * 60\n       });\n     }\n   }\n   onReset() {\n     this.setState({\n       breakLength: Number.parseInt(this.props.defaultBreakLength, 5),\n       sessionLength: Number.parseInt(this.props.defaultSessionLength, 25),\n       timeLabel: 'Session',\n       timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 25) * 60,\n       isStart: false,\n       timerInterval: null\n     });\n     this.audioBeep.current.pause();\n     this.audioBeep.current.currentTime = 0;\n     this.state.timerInterval && clearInterval(this.state.timerInterval);\n   }\n   onStartStop() {\n     if (!this.state.isStart) {\n       this.setState({\n         isStart: !this.state.isStart,\n         timerInterval: setInterval(() => {\n           this.decreaseTimer();\n           this.phaseControl();\n         }, 1000)\n       })\n     } else {\n       this.audioBeep.current.pause();\n       this.audioBeep.current.currentTime = 0;\n       this.state.timerInterval && clearInterval(this.state.timerInterval);\n\n       this.setState({\n         isStart: !this.state.isStart,\n         timerInterval: null\n       });\n     }\n   }\ndecreaseTimer() {\n  this.setState({\n    timeLeftInSecond: this.state.timeLeftInSecond - 1\n  });\n}\n\n\n}\n\n//Dev-To AryanJ Tutorial in commented out sections\n/*function App() {\n  const [breakLengthSeconds, setBreakLength] = useState(300);\n  const [sessionLengthSeconds, setSessionLength] = useState(60 * 25);\n\n  const decrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds - 60;\n    if (newBreakLength < 0) {\n      setBreakLength(0);\n    } else {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => setBreakLength(breakLengthSeconds + 60);\n\n  const decrementSessionLength = () => {\n    const newSessionLength = sessionLengthSeconds - 60;\n    if (newSessionLength < 0) {\n      setSessionLength(0);\n    } else {\n      setSessionLength(newSessionLength);\n    }\n  };\n  const incrementSessionLength = () =>\n  setSessionLength(sessionLengthSeconds + 60);\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <h1 className=\"app-title\">Rebel-Cow Pomodoro Clock</h1>\n        </div>\n\n        <div className=\"timeleft-container\">\n          <TimeLeft \n          sessionLengthSeconds={sessionLengthSeconds} />\n        </div>\n\n        <div className=\"control-container\">\n          <Controllers\n          />\n        </div>\n        \n        <div className=\"settings-container\">\n          <Break\n            breakLengthSeconds={breakLengthSeconds}\n            incrementBreakLength={incrementBreakLength}\n            decrementBreakLength={decrementBreakLength}\n          />\n          <Session\n            sessionLengthSeconds={sessionLengthSeconds}\n            incrementSessionLength={incrementSessionLength}\n            decrementSessionLength={decrementSessionLength}\n          />\n        </div>\n        <div className=\"sound-container\">\n          <Sound />\n        </div>\n        <div className=\"footer\">\n          <h3 className=\"footer-attribute\">\n            React JS Pomodoro Clock App created by{\" \"}\n            <a href=\"https://github.com/TLanetteRose\">\n              {\" \"}\n              <span> T.Lanette Pollard </span>\n            </a>{\" \"}\n            &nbsp; FreeCodeCamp Front End Libraries Project\n          </h3>\n        </div>\n      </div>\n    );\n  \n}*/\n\n\n//export default App;\n  "]},"metadata":{},"sourceType":"module"}