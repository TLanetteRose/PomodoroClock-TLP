{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/TimeLeft.js\";\n//Dev-To AryanJ Tutorial in commented out sections\n//import moment from 'moment';\n//import momentDurationFormatSetup from 'moment-duration-format';\nimport React from 'react'; //import React, {useState} from 'react';\n//import {useEffect} from 'react';\n//momentDurationFormatSetup(moment);\n\nconst TimeLeft = ({\n  /*handleResetBtnClick,\n  handleStart,\n  handleStop,\n  handleReset,\n  timerRunning,\n  //startStopButtonLabel, \n  minutes,\n  seconds,\n  myAudio,\n  soundfile,\n  timerLabel*/\n}) => {\n  const handleStart = () => {\n    context.resume();\n    setTimerRunning(true);\n  };\n\n  const handleStop = () => {\n    setTimerRunning(false);\n  };\n\n  const handleReset = () => {\n    setSessionLength(25);\n    setBreakLength(5);\n    setTimeLeft(25 * 60);\n    setTimerLabel('Session');\n    setTimerRunning(false);\n    myAudio.current.pause();\n    myAudio.current.currentTime = 0;\n  }; //const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss', {trim: false});\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"timer-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, timerLabel), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"time-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes, \":\", seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"start_stop\",\n    onClick: timerRunning ? handleStart : handleStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Start/Stop\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-play fa-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-pause fa-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"reset\",\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sound-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"beep\",\n    ref: myAudio,\n    src: soundfile,\n    type: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default TimeLeft;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/TimeLeft.js"],"names":["React","TimeLeft","handleStart","context","resume","setTimerRunning","handleStop","handleReset","setSessionLength","setBreakLength","setTimeLeft","setTimerLabel","myAudio","current","pause","currentTime","timerLabel","minutes","slice","seconds","timerRunning","soundfile"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAIA;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChB;;;;;;;;;;;AADgB,CAAD,KAYV;AACJ,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,MAAR;AACAC,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAHD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBD,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBC,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAC,IAAAA,cAAc,CAAC,CAAD,CAAd;AACAC,IAAAA,WAAW,CAAC,KAAK,EAAN,CAAX;AACAC,IAAAA,aAAa,CAAC,SAAD,CAAb;AACAN,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAO,IAAAA,OAAO,CAACC,OAAR,CAAgBC,KAAhB;AACAF,IAAAA,OAAO,CAACC,OAAR,CAAgBE,WAAhB,GAA8B,CAA9B;AACD,GARD,CATI,CAmBH;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,EAAE,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,UAAzB,CADF,eAEE;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBC,OAAO,GAAG,EAAV,GAAe,CAAC,MAAMA,OAAP,EAAgBC,KAAhB,CAAsB,CAAC,CAAvB,CAAf,GAA2CD,OAAjE,OAA2EE,OAAO,GAAE,EAAT,GAAc,CAAC,MAAMA,OAAP,EAAgBD,KAAhB,CAAsB,CAAC,CAAvB,CAAd,GAA0CC,OAArH,CAFF,eAIE;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,OAAO,EAAEC,YAAY,GAAGlB,WAAH,GAAiBI,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,eASE;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,OAAO,EAAEC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAeE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,GAAG,EAAEK,OAAtB;AAA+B,IAAA,GAAG,EAAES,SAApC;AAA+C,IAAA,IAAI,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,CADF;AAqBH,CAtDD;;AAyDA,eAAepB,QAAf","sourcesContent":["//Dev-To AryanJ Tutorial in commented out sections\n//import moment from 'moment';\n//import momentDurationFormatSetup from 'moment-duration-format';\nimport React from 'react';\n//import React, {useState} from 'react';\n//import {useEffect} from 'react';\n\n\n\n//momentDurationFormatSetup(moment);\n\nconst TimeLeft = ({ \n  /*handleResetBtnClick,\n  handleStart,\n  handleStop,\n  handleReset,\n  timerRunning,\n  //startStopButtonLabel, \n  minutes,\n  seconds,\n  myAudio,\n  soundfile,\n  timerLabel*/\n }) => {\n   const handleStart = () => {\n     context.resume();\n     setTimerRunning(true);\n   }\n   const handleStop = () => {\n     setTimerRunning(false);\n   }\n\n   const handleReset = () => {\n     setSessionLength(25);\n     setBreakLength(5);\n     setTimeLeft(25 * 60);\n     setTimerLabel('Session');\n     setTimerRunning(false);\n     myAudio.current.pause();\n     myAudio.current.currentTime = 0;\n   }\n\n    //const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss', {trim: false});\n\n    return (\n      <div className=\"time-container\">\n        <label id=\"timer-label\">{timerLabel}</label>\n        <span id=\"time-left\">{minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes}:{seconds <10 ? (\"0\" + seconds).slice(-2) : seconds}</span>\n\n        <button id=\"start_stop\" onClick={timerRunning ? handleStart : handleStop}>\n          <p>Start/Stop</p>\n          <i className=\"fa fa-play fa-2x\"/>\n          <i className=\"fa fa-pause fa-2x\"/>\n        </button>\n        <button id=\"reset\" onClick={handleReset}>\n          <p>Reset</p>\n          <i className=\"fa fa-refresh fa-2x\"/> \n        </button>\n      \n\n        <div className=\"sound-container\">\n          <audio id=\"beep\" ref={myAudio} src={soundfile} type='audio'/>\n        </div>\n      </div>\n    );\n};\n\n\nexport default TimeLeft;\n"]},"metadata":{},"sourceType":"module"}