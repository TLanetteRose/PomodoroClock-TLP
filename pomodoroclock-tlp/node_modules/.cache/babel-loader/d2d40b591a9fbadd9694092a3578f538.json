{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js\";\nimport React, { Component } from 'react';\nimport '../src/styles/App.css';\nimport Settings from './components/Settings/Settings';\nimport Timer from './components/Timer/Timer';\nimport Controllers from './components/Controllers/Controllers';\nimport Sound from './components/Sound/Sound';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.audioBeep = React.createRef();\n    this.state = {\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 10),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 10),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 10) * 60,\n      isStart: false,\n      timerInterval: null\n    };\n    this.onIncreaseBreak = this.onIncreaseBreak.bind(this);\n    this.onDecreaseBreak = this.onDecreaseBreak.bind(this);\n    this.onIncreaseSession = this.onIncreaseSession.bind(this);\n    this.onDecreaseSession = this.onDecreaseSession.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onStartStop = this.onStartStop.bind(this);\n    this.decreaseTimer = this.decreaseTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n  }\n\n  onIncreaseBreak() {\n    if (this.state.breakLength < 60 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength + 1\n      });\n    }\n  }\n\n  onDecreaseBreak() {\n    if (this.state.breakLength > 1 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength - 1\n      });\n    }\n  }\n\n  onIncreaseSession() {\n    if (this.state.sessionLength < 60 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1,\n        timeLeftInSecond: (this.state.sessionLength + 1) * 60\n      });\n    }\n  }\n\n  onDecreaseSession() {\n    if (this.state.sessionLength > 1 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength - 1,\n        timeLeftInSecond: (this.state.sessionLength - 1) * 60\n      });\n    }\n  }\n\n  onReset() {\n    this.setState({\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 10),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 10),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 10) * 60,\n      isStart: false,\n      timerInterval: null\n    });\n    this.audioBeep.current.pause();\n    this.audioBeep.current.currentTime = 0;\n    this.state.timerInterval && clearInterval(this.state.timerInterval);\n  }\n\n  onStartStop() {\n    if (!this.state.isStart) {\n      this.setState({\n        isStart: !this.state.isStart,\n        timerInterval: setInterval(() => {\n          this.decreaseTimer();\n          this.phaseControl();\n        }, 1000)\n      });\n    } else {\n      this.audioBeep.current.pause();\n      this.audioBeep.current.currentTime = 0;\n      this.state.timerInterval && clearInterval(this.state.timerInterval);\n      this.setState({\n        isStart: !this.state.isStart,\n        timerInterval: null\n      });\n    }\n  }\n\n  decreaseTimer() {\n    this.setState({\n      timeLeftInSecond: this.state.timeLeftInSecond - 1\n    });\n  }\n\n  phaseControl() {\n    if (this.state.timeLeftInSecond === 0) {\n      this.audioBeep.current.play();\n    } else if (this.state.timeLeftInSecond === -1) {\n      if (tis.state.timeLabel === 'Session') {\n        this.setState({\n          timeLabel: 'Break',\n          timeLeftInSecond: this.state.breakLength * 60\n        });\n      } else {\n        this.setState({\n          timeLabel: 'Session',\n          timeLeftInSecond: this.state.sessionLength * 60\n        });\n      }\n    }\n  }\n  /*startTimer = (duration) => {\n    this.setState({timerRunning: true})\n    let time = duration * 60\n    let minutes;\n    let seconds;\n    let runningTimer = setInterval(() => {\n      this.setState({\n        timerId: runningTimer\n      })\n      minutes = Math.floor(time / 60)\n      seconds = time - minutes * 60\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      this.setState({currentTime : `${minutes} : ${seconds}`})\n      if (time === 0) {\n        if(this.state.cycle === \"Session\"){\n          this.setState({\n            cycle: \"Break\",\n            timerRunning: false\n          })\n          clearInterval(this.state.timerId)\n          this.startTimer(this.state.breakTime)\n        } else {\n          this.setState({\n            cycle: \"Session\",\n            timerRunning: false\n          })\n          clearInterval(this.state.timerId)\n          this.startTimer(this.state.workTime)\n        }\n      }\n    }, 1000);\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"app-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, \"Rebel-Cow Pomodoro Clock\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"timer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      timeLabel: this.state.timeLabel,\n      timeLeftInSecond: this.state.timeLeftInSecond,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Controllers, {\n      className: \"controllers-container\",\n      onReset: this.onReset,\n      onStartStop: this.onStartStop,\n      isStart: this.state.isStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"settings-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sound-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Sound, {\n      setSound: this.setSound,\n      sound: this.state.sound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"footer-attribute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"React JS Pomodoro Clock App created by\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://github.com/TLanetteRose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, \" T.Lanette Pollard \")), \" \", \"\\xA0 FreeCodeCamp Front End Libraries Project\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js"],"names":["React","Component","Settings","Timer","Controllers","Sound","App","constructor","props","audioBeep","createRef","state","breakLength","Number","parseInt","defaultBreakLength","sessionLength","defaultSessionLength","timeLabel","timeLeftInSecond","isStart","timerInterval","onIncreaseBreak","bind","onDecreaseBreak","onIncreaseSession","onDecreaseSession","onReset","onStartStop","decreaseTimer","phaseControl","setState","current","pause","currentTime","clearInterval","setInterval","play","tis","render","setSound","sound"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../src/styles/App.css';\n\nimport Settings from './components/Settings/Settings';\nimport Timer from './components/Timer/Timer';\nimport Controllers from './components/Controllers/Controllers';\nimport Sound from './components/Sound/Sound';\n\n\nexport default class App extends Component {\n  constructor (props) {\n    super(props);\n    this.audioBeep = React.createRef();\n\n    this.state = {\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 10),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 10),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 10) * 60,\n      isStart: false,\n      timerInterval: null\n    }\n    this.onIncreaseBreak = this.onIncreaseBreak.bind(this);\n    this.onDecreaseBreak = this.onDecreaseBreak.bind(this);\n    this.onIncreaseSession = this.onIncreaseSession.bind(this);\n    this.onDecreaseSession = this.onDecreaseSession.bind(this);\n    this.onReset = this.onReset.bind(this);\n    this.onStartStop = this.onStartStop.bind(this);\n    this.decreaseTimer = this.decreaseTimer.bind(this);\n    this.phaseControl = this.phaseControl.bind(this);\n\n  }\n\n  onIncreaseBreak() {\n    if (this.state.breakLength < 60 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength + 1\n      });\n    }\n  }\n\n  onDecreaseBreak() {\n    if (this.state.breakLength > 1 && !this.state.isStart) {\n      this.setState({\n        breakLength: this.state.breakLength - 1\n      });\n    }\n  }\n\n  onIncreaseSession() {\n    if (this.state.sessionLength < 60 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1,\n        timeLeftInSecond: (this.state.sessionLength + 1) * 60\n      });\n    }\n  }\n\n  onDecreaseSession() {\n    if (this.state.sessionLength > 1 && !this.state.isStart) {\n      this.setState({\n        sessionLength: this.state.sessionLength - 1,\n        timeLeftInSecond: (this.state.sessionLength - 1) * 60,\n      });\n    }\n  }\n\n  onReset() {\n    this.setState({\n      breakLength: Number.parseInt(this.props.defaultBreakLength, 10),\n      sessionLength: Number.parseInt(this.props.defaultSessionLength, 10),\n      timeLabel: 'Session',\n      timeLeftInSecond: Number.parseInt(this.props.defaultSessionLength, 10) * 60,\n      isStart: false,\n      timerInterval: null\n    });\n    this.audioBeep.current.pause();\n    this.audioBeep.current.currentTime = 0;\n    this.state.timerInterval && clearInterval(this.state.timerInterval);\n  }\n\n onStartStop() {\n   if (!this.state.isStart) {\n     this.setState({\n       isStart: !this.state.isStart,\n       timerInterval: setInterval(() => {\n         this.decreaseTimer();\n         this.phaseControl();\n       }, 1000)\n     })\n   } else {\n     this.audioBeep.current.pause();\n     this.audioBeep.current.currentTime = 0;\n     this.state.timerInterval && clearInterval(this.state.timerInterval);\n\n     this.setState({\n       isStart: !this.state.isStart,\n       timerInterval: null\n     });\n   }\n }\n\n decreaseTimer() {\n   this.setState({\n     timeLeftInSecond: this.state.timeLeftInSecond - 1\n   });\n }\n\n phaseControl() {\n   if (this.state.timeLeftInSecond === 0) {\n     this.audioBeep.current.play();\n   } else if (this.state.timeLeftInSecond === -1) {\n     if (tis.state.timeLabel === 'Session') {\n       this.setState({\n         timeLabel: 'Break',\n         timeLeftInSecond: this.state.breakLength * 60\n       });\n     } else {\n       this.setState({\n         timeLabel: 'Session',\n         timeLeftInSecond: this.state.sessionLength * 60\n       });\n     }\n   }\n }\n\n  /*startTimer = (duration) => {\n    this.setState({timerRunning: true})\n    let time = duration * 60\n    let minutes;\n    let seconds;\n    let runningTimer = setInterval(() => {\n      this.setState({\n        timerId: runningTimer\n      })\n      minutes = Math.floor(time / 60)\n      seconds = time - minutes * 60\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n      this.setState({currentTime : `${minutes} : ${seconds}`})\n      if (time === 0) {\n        if(this.state.cycle === \"Session\"){\n          this.setState({\n            cycle: \"Break\",\n            timerRunning: false\n          })\n          clearInterval(this.state.timerId)\n          this.startTimer(this.state.breakTime)\n        } else {\n          this.setState({\n            cycle: \"Session\",\n            timerRunning: false\n          })\n          clearInterval(this.state.timerId)\n          this.startTimer(this.state.workTime)\n        }\n      }\n    }, 1000);\n  }*/\n\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <h1 className=\"app-title\">Rebel-Cow Pomodoro Clock</h1>\n        </div>\n\n        <div className=\"timer-container\">\n          <Timer \n            timeLabel={this.state.timeLabel}\n            timeLeftInSecond={this.state.timeLeftInSecond}\n            />\n          <Controllers className=\"controllers-container\"\n            onReset={this.onReset}\n            onStartStop={this.onStartStop}\n            isStart={this.state.isStart}\n          />\n        </div>\n\n        <div className=\"settings-container\">\n          <Settings />\n        </div>\n        <div className=\"sound-container\">\n         <Sound setSound={this.setSound} sound={this.state.sound} />\n        </div>\n        <div className=\"footer\">\n          <h3 className=\"footer-attribute\">\n            React JS Pomodoro Clock App created by{\" \"}\n            <a href=\"https://github.com/TLanetteRose\">\n              {\" \"}\n              <span> T.Lanette Pollard </span>\n            </a>{\" \"}\n            &nbsp; FreeCodeCamp Front End Libraries Project\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\n  "]},"metadata":{},"sourceType":"module"}