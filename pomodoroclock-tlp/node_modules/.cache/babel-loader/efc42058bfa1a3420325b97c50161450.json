{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/Break.js\";\nimport React, { useState } from 'react';\n\nconst Break = () => {\n  const [breakLengthSeconds, setBreakLengthSeconds] = useState(300); //seconds for 5 minutes\n\n  const decrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds - 60;\n\n    if (newBreakLength < 0) {\n      setBreakLengthSeconds(0);\n    } else {\n      setBreakLengthSeconds(newBreakLength);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"break-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Break\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"break-length\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, breakLengthSeconds));\n};","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/Break.js"],"names":["React","useState","Break","breakLengthSeconds","setBreakLengthSeconds","decrementBreakLength","newBreakLength"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAK,CACDC,kBADC,EAEDC,qBAFC,IAGDH,QAAQ,CAAC,GAAD,CAHZ,CADgB,CAIG;;AAEnB,QAAMI,oBAAoB,GAAG,MAAM;AAC/B,UAAMC,cAAc,GAAGH,kBAAkB,GAAG,EAA5C;;AACA,QAAIG,cAAc,GAAG,CAArB,EAAuB;AACnBF,MAAAA,qBAAqB,CAAC,CAAD,CAArB;AACH,KAFD,MAEM;AACFA,MAAAA,qBAAqB,CAACE,cAAD,CAArB;AACH;AACJ,GAPD;;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBH,kBAAtB,CAFJ,CADJ;AAMH,CArBD","sourcesContent":["import React, {useState} from 'react';\n\nconst Break = () => {\n    const[\n        breakLengthSeconds,\n        setBreakLengthSeconds\n    ] = useState(300); //seconds for 5 minutes\n\n    const decrementBreakLength = () => {\n        const newBreakLength = breakLengthSeconds - 60;\n        if (newBreakLength < 0){\n            setBreakLengthSeconds(0);\n        }else {\n            setBreakLengthSeconds(newBreakLength);\n        }\n    };\n\n    return (\n        <div>\n            <p id=\"break-label\">Break</p>\n            <p id=\"break-length\">{breakLengthSeconds}</p>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}