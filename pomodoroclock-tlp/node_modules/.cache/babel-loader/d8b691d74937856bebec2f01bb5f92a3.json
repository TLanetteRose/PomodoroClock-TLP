{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/TimeLeft.js\";\n//Dev-To AryanJ Tutorial in commented out sections\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport React, { Component } from 'react'; //import {useState} from 'react';\n\nmomentDurationFormatSetup(moment);\n\nconst TimeLeft = ({\n  sessionLengthSeconds\n}) => {\n  const [timeLeft] = useState(sessionLengthSeconds);\n  const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"timer-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Timer\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"time-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, formattedTimeLeft));\n};\n/*const formatTime = (timeLeftInSecond) => {\n  let minute = Math.floor(timeLeftInSecond / 60);\n  if (minute < 10) minute = '0' + minute;\n\n  let second = timeLeftInSecond - 60 * minute;\n  if (second < 10) second = '0' + second;\n\n  return `${minute}:${second}`;\n}\n\nexport default class TimeLeft extends Component {\n  render() {\n    return (\n      <div className=\"time-content\">\n        <label id=\"timer-label\">{this.props.timeLabel}</label>\n        <span id=\"time-left\">{formatTime(this.props.timeLeftInSecond)}</span>\n      </div>\n    )\n  }\n}*/","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/TimeLeft.js"],"names":["moment","momentDurationFormatSetup","React","Component","TimeLeft","sessionLengthSeconds","timeLeft","useState","formattedTimeLeft","duration","format"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,yBAAP,MAAsC,wBAAtC;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AAEAF,yBAAyB,CAACD,MAAD,CAAzB;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA4B;AACzC,QAAM,CAACC,QAAD,IAAaC,QAAQ,CAACF,oBAAD,CAA3B;AAEA,QAAMG,iBAAiB,GAAGR,MAAM,CAACS,QAAP,CAAgBH,QAAhB,EAA0B,GAA1B,EAA+BI,MAA/B,CAAsC,OAAtC,CAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,EAAE,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBF,iBAAtB,CAFF,CADF;AAMH,CAXD;AAaA","sourcesContent":["//Dev-To AryanJ Tutorial in commented out sections\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport React, {Component} from 'react';\n//import {useState} from 'react';\n\nmomentDurationFormatSetup(moment);\n\nconst TimeLeft = ({sessionLengthSeconds}) => {\n    const [timeLeft] = useState(sessionLengthSeconds);\n\n    const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss');\n\n    return (\n      <div className=\"time-content\">\n        <label id=\"timer-label\">Timer</label>\n        <span id=\"time-left\">{formattedTimeLeft}</span>\n      </div>\n    );\n};\n\n/*const formatTime = (timeLeftInSecond) => {\n  let minute = Math.floor(timeLeftInSecond / 60);\n  if (minute < 10) minute = '0' + minute;\n\n  let second = timeLeftInSecond - 60 * minute;\n  if (second < 10) second = '0' + second;\n\n  return `${minute}:${second}`;\n}\n\nexport default class TimeLeft extends Component {\n  render() {\n    return (\n      <div className=\"time-content\">\n        <label id=\"timer-label\">{this.props.timeLabel}</label>\n        <span id=\"time-left\">{formatTime(this.props.timeLeftInSecond)}</span>\n      </div>\n    )\n  }\n}*/\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}