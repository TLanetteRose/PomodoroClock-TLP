{"ast":null,"code":"//import moment from 'moment';\n//import momentDurationFormatSetup from 'moment-duration-format';\nimport React, { Component } from 'react'; //import {useState} from 'react';\n//momentDurationFormatSetup(moment);\n\n/*const TimeLeft = ({sessionLengthSeconds}) => {\n    const [timeLeft] = useState(sessionLengthSeconds);\n\n    const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss');*/\n\n/*return (\n  <div className=\"time-content\">\n    <label id=\"timer-label\">Timer</label>\n    <span id=\"time-left\">{formattedTimeLeft}</span>\n  </div>\n);\n};*/\n\nconst formatTime = timeLeftInSecond => {\n  let minute = Math.floor(timeLeftInSecond / 60);\n  if (minute < 10) minute = '0' + minute;\n  let second = timeLeftInSecond - 60 * minute;\n  if (second < 10) second = '0' + second;\n  return `${minute}:${second}`;\n};\n\nexport default TimeLeft;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/TimeLeft.js"],"names":["React","Component","formatTime","timeLeftInSecond","minute","Math","floor","second","TimeLeft"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;AAEA;;AAEA;;;;;AAKI;;;;;;;;AAQJ,MAAMC,UAAU,GAAIC,gBAAD,IAAsB;AACvC,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,gBAAgB,GAAG,EAA9B,CAAb;AACA,MAAIC,MAAM,GAAG,EAAb,EAAiBA,MAAM,GAAG,MAAMA,MAAf;AAEjB,MAAIG,MAAM,GAAGJ,gBAAgB,GAAG,KAAKC,MAArC;AACA,MAAIG,MAAM,GAAG,EAAb,EAAiBA,MAAM,GAAG,MAAMA,MAAf;AAEjB,SAAQ,GAAEH,MAAO,IAAGG,MAAO,EAA3B;AACD,CARD;;AAaA,eAAeC,QAAf","sourcesContent":["//import moment from 'moment';\n//import momentDurationFormatSetup from 'moment-duration-format';\nimport React, {Component} from 'react';\n//import {useState} from 'react';\n\n//momentDurationFormatSetup(moment);\n\n/*const TimeLeft = ({sessionLengthSeconds}) => {\n    const [timeLeft] = useState(sessionLengthSeconds);\n\n    const formattedTimeLeft = moment.duration(timeLeft, 's').format('mm:ss');*/\n\n    /*return (\n      <div className=\"time-content\">\n        <label id=\"timer-label\">Timer</label>\n        <span id=\"time-left\">{formattedTimeLeft}</span>\n      </div>\n    );\n};*/\n\nconst formatTime = (timeLeftInSecond) => {\n  let minute = Math.floor(timeLeftInSecond / 60);\n  if (minute < 10) minute = '0' + minute;\n\n  let second = timeLeftInSecond - 60 * minute;\n  if (second < 10) second = '0' + second;\n\n  return `${minute}:${second}`;\n}\n\n\n\n\nexport default TimeLeft;\n\n"]},"metadata":{},"sourceType":"module"}