{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Session from '../src/components/Session';\nimport Break from '../src/components/Break';\nimport './styles/App.css';\nimport soundfile from './michigan_frog.wav';\n\nconst App = () => {\n  const myAudio = useRef();\n  const context = new AudioContext();\n  const [breakLengthSeconds, setBreakLength] = useState(5);\n  const [sessionLengthSeconds, setSessionLength] = useState(25);\n  const [timerLabel, setTimerLabel] = useState('Session');\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [timerRunning, setTimerRunning] = useState(false);\n\n  const incrementSessionLength = () => {\n    if (!timerRunning && sessionLengthSeconds < 60) {\n      setSessionLength(sessionLengthSeconds + 1);\n      setTimeLeft((sessionLengthSeconds + 1) * 60);\n    }\n  };\n\n  const decrementSessionLength = () => {\n    if (!timerRunning && sessionLengthSeconds > 1) {\n      setSessionLength(sessionLengthSeconds - 1);\n      setTimeLeft((sessionLengthSeconds - 1) * 60);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    if (!timerRunning && breakLengthSeconds < 60) {\n      setBreakLength(breakLengthSeconds + 1);\n    }\n  };\n\n  const decrementBreakLength = () => {\n    if (!timerRunning && breakLengthSeconds > 1) {\n      setBreakLength(breakLengthSeconds - 1);\n    }\n  };\n\n  let minutes = Math.floor(timeLeft / 60);\n  let seconds = timeLeft % 60;\n  useEffect(() => {\n    const handleSwitch = () => {\n      if (timerLabel === 'Session') {\n        setTimerLabel('Break');\n        setTimeLeft(breakLengthSeconds * 60);\n      } else if (timerLabel === 'Break') {\n        setTimerLabel('Session');\n        setTimeLeft(sessionLengthSeconds * 60);\n      }\n    };\n\n    let countdown = null;\n\n    if (timerRunning && timeLeft > 0) {\n      countdown = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n    } else if (timerRunning && timeLeft === 0) {\n      countdown = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      myAudio.current.play();\n      handleSwitch();\n    } else {\n      clearInterval(countdown);\n    }\n\n    return () => clearInterval(countdown);\n  }, [timerRunning, timeLeft, timerLabel, breakLengthSeconds, sessionLengthSeconds, myAudio]);\n\n  const handleStart = () => {\n    context.resume();\n    setTimerRunning(true);\n  };\n\n  const handleStop = () => {\n    setTimerRunning(false);\n  };\n\n  const handleReset = () => {\n    setSessionLength(25);\n    setBreakLength(5);\n    setTimeLeft(25 * 60);\n    setTimerLabel('Session');\n    setTimerRunning(false);\n    myAudio.current.pause();\n    myAudio.current.currentTime = 0;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Rebel-Cow Pomodoro Clock\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"timer-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, timerLabel), /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"time-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes, \":\", seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"start_stop\",\n    className: \"start-stop-btn\",\n    onClick: timerRunning ? handleStop : handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Start/Stop\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-play fa-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-pause fa-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"reset\",\n    className: \"reset-btn\",\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-refresh fa-2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Break, {\n    breakLengthSeconds: breakLengthSeconds,\n    incrementBreakLength: incrementBreakLength,\n    decrementBreakLength: decrementBreakLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Session, {\n    sessionLengthSeconds: sessionLengthSeconds,\n    incrementSessionLength: incrementSessionLength,\n    decrementSessionLength: decrementSessionLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sound-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"beep\",\n    ref: myAudio,\n    src: soundfile,\n    type: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js"],"names":["React","useState","useEffect","useRef","Session","Break","soundfile","App","myAudio","context","AudioContext","breakLengthSeconds","setBreakLength","sessionLengthSeconds","setSessionLength","timerLabel","setTimerLabel","timeLeft","setTimeLeft","timerRunning","setTimerRunning","incrementSessionLength","decrementSessionLength","incrementBreakLength","decrementBreakLength","minutes","Math","floor","seconds","handleSwitch","countdown","setInterval","current","play","clearInterval","handleStart","resume","handleStop","handleReset","pause","currentTime","slice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Session from '../src/components/Session';\nimport Break from '../src/components/Break';\nimport './styles/App.css';\nimport soundfile from './michigan_frog.wav';\n\n\n\nconst App = () => {\n  const myAudio = useRef();\n  const context = new AudioContext();\n  const [breakLengthSeconds, setBreakLength]= useState(5);\n  const [sessionLengthSeconds, setSessionLength]= useState(25);\n  const [timerLabel, setTimerLabel]= useState('Session');\n  const [timeLeft, setTimeLeft]= useState(25 * 60);\n  const [timerRunning, setTimerRunning]= useState(false);\n\n  const incrementSessionLength = () => {\n    if (!timerRunning && sessionLengthSeconds < 60){\n      setSessionLength(sessionLengthSeconds + 1)\n      setTimeLeft((sessionLengthSeconds + 1) * 60);\n    }\n  }\n  const decrementSessionLength = () => {\n    if(!timerRunning && sessionLengthSeconds > 1){\n      setSessionLength(sessionLengthSeconds - 1)\n      setTimeLeft((sessionLengthSeconds - 1) * 60);\n    }\n  }\n  const incrementBreakLength = () => {\n    if(!timerRunning && breakLengthSeconds < 60){\n      setBreakLength(breakLengthSeconds + 1)\n    }\n  }\n  const decrementBreakLength = () => {\n    if(!timerRunning && breakLengthSeconds > 1){\n      setBreakLength(breakLengthSeconds - 1)\n    }\n  }\n\n  let minutes = Math.floor(timeLeft / 60);\n  let seconds = timeLeft % 60;\n\n  useEffect(() => {\n    const handleSwitch = () => {\n      if (timerLabel === 'Session') {\n        setTimerLabel('Break');\n        setTimeLeft(breakLengthSeconds * 60);\n      } else if (timerLabel === 'Break') {\n        setTimerLabel('Session');\n        setTimeLeft(sessionLengthSeconds * 60);\n      }\n    }\n\n    let countdown = null;\n    if (timerRunning && timeLeft > 0) {\n      countdown = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n    } else if (timerRunning && timeLeft === 0) {\n      countdown = setInterval(() => {\n        setTimeLeft(timeLeft - 1);\n      }, 1000);\n      myAudio.current.play();\n      handleSwitch();\n    } else {\n      clearInterval(countdown);\n    }\n    return () => clearInterval(countdown);\n  }, \n  [timerRunning, timeLeft, timerLabel, breakLengthSeconds, sessionLengthSeconds, myAudio]);\n\n  const handleStart = () => {\n    context.resume();\n    setTimerRunning(true);\n  }\n\n  const handleStop = () => {\n    setTimerRunning(false);\n  }\n\n  const handleReset = () => {\n    setSessionLength(25);\n    setBreakLength(5);\n    setTimeLeft(25 * 60);\n    setTimerLabel('Session');\n    setTimerRunning(false);\n    myAudio.current.pause();\n    myAudio.current.currentTime = 0;\n  }\n\n\n  return  (\n    <div className=\"app-container\">\n      <div className=\"header-container\">\n        <h1 className=\"app-title\">Rebel-Cow Pomodoro Clock</h1>\n      </div>\n\n      <div className=\"timer-container\">\n        <h2 id=\"timer-label\">{timerLabel}</h2>\n        <h3 id=\"time-left\">\n          {minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes}:{seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds}\n        </h3>\n        \n        <button id=\"start_stop\" className=\"start-stop-btn\" onClick={timerRunning ? handleStop : handleStart}>\n          <p>Start/Stop</p>\n          <i className=\"fa fa-play fa-2x\"/>\n          <i className=\"fa fa-pause fa-2x\"/>\n        </button>\n        <button id=\"reset\" className=\"reset-btn\" onClick={handleReset}>\n          <p>Reset</p>\n          <i className=\"fa fa-refresh fa-2x\"/>\n        </button>\n      </div>\n\n      <div className=\"settings-container\">\n        <Break \n          breakLengthSeconds={breakLengthSeconds}\n          incrementBreakLength={incrementBreakLength}\n          decrementBreakLength={decrementBreakLength}\n        />\n        <Session \n          sessionLengthSeconds={sessionLengthSeconds}\n          incrementSessionLength={incrementSessionLength}\n          decrementSessionLength={decrementSessionLength}\n        />\n      </div>\n\n      <div className=\"sound-container\">\n        <audio id=\"beep\" ref={myAudio} src={soundfile} type=\"audio\"></audio>\n      </div>\n\n    </div>\n  )\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}