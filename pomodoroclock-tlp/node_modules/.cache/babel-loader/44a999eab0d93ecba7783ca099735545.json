{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Session from '../src/components/Session';\nimport Break from '../src/components/Break';\nimport './styles/App.css';\nimport soundfile from './michigan_frog.wav';\n\nconst App = () => {\n  const myAudio = useRef();\n  const context = new AudioContext();\n  const [breakLengthSeconds, setBreakLength] = useState(5);\n  const [sessionLengthSeconds, setSessionLength] = useState(25);\n  const [timerLabel, setTimerLabel] = useState('Session');\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [timerRunning, setTimerRunning] = useState(false);\n\n  const incrementSessionLength = () => {\n    if (!timerRunning && sessionLengthSeconds < 60) {\n      setSessionLength(sessionLengthSeconds + 1);\n      setTimeLeft((sessionLengthSeconds + 1) * 60);\n    }\n  };\n\n  const decrementSessionLength = () => {\n    if (!timerRunning && sessionLengthSeconds > 1) {\n      setSessionLength(sessionLengthSeconds - 1);\n      setTimeLeft((sessionLengthSeconds - 1) * 60);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    if (!timerRunning && breakLengthSeconds < 60) {\n      setBreakLength(breakLengthSeconds + 1);\n    }\n  };\n\n  const decrementBreakLength = () => {\n    if (!timerRunning && breakLengthSeconds > 1) {\n      setBreakLength(breakLengthSeconds - 1);\n    }\n  };\n\n  let minutes = Math.floor(timeLeft / 60);\n  let seconds = timeLeft % 60;\n  useEffect(() => {\n    const handleSwitch = () => {\n      if (timerLabel === 'Session') {\n        setTimerLabel('Break');\n        setTimeLeft(breakLengthSeconds * 60);\n      } else if (timerLabel === 'Break') {\n        setTimerLabel('Session');\n        setTimeLeft(sessionLengthSeconds * 60);\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Rebel-Cow Pomodoro Clock\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Break, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Session, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sound-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"beep\",\n    ref: myAudio,\n    src: soundfile,\n    type: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js"],"names":["React","useState","useEffect","useRef","Session","Break","soundfile","App","myAudio","context","AudioContext","breakLengthSeconds","setBreakLength","sessionLengthSeconds","setSessionLength","timerLabel","setTimerLabel","timeLeft","setTimeLeft","timerRunning","setTimerRunning","incrementSessionLength","decrementSessionLength","incrementBreakLength","decrementBreakLength","minutes","Math","floor","seconds","handleSwitch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Session from '../src/components/Session';\nimport Break from '../src/components/Break';\nimport './styles/App.css';\nimport soundfile from './michigan_frog.wav';\n\n\n\nconst App = () => {\n  const myAudio = useRef();\n  const context = new AudioContext();\n  const [breakLengthSeconds, setBreakLength]= useState(5);\n  const [sessionLengthSeconds, setSessionLength]= useState(25);\n  const [timerLabel, setTimerLabel]= useState('Session');\n  const [timeLeft, setTimeLeft]= useState(25 * 60);\n  const [timerRunning, setTimerRunning]= useState(false);\n\n  const incrementSessionLength = () => {\n    if (!timerRunning && sessionLengthSeconds < 60){\n      setSessionLength(sessionLengthSeconds + 1)\n      setTimeLeft((sessionLengthSeconds + 1) * 60);\n    }\n  }\n  const decrementSessionLength = () => {\n    if(!timerRunning && sessionLengthSeconds > 1){\n      setSessionLength(sessionLengthSeconds - 1)\n      setTimeLeft((sessionLengthSeconds - 1) * 60);\n    }\n  }\n  const incrementBreakLength = () => {\n    if(!timerRunning && breakLengthSeconds < 60){\n      setBreakLength(breakLengthSeconds + 1)\n    }\n  }\n  const decrementBreakLength = () => {\n    if(!timerRunning && breakLengthSeconds > 1){\n      setBreakLength(breakLengthSeconds - 1)\n    }\n  }\n\n  let minutes = Math.floor(timeLeft / 60);\n  let seconds = timeLeft % 60;\n\n  useEffect(() => {\n    const handleSwitch = () => {\n      if (timerLabel === 'Session') {\n        setTimerLabel('Break');\n        setTimeLeft(breakLengthSeconds * 60);\n      } else if (timerLabel === 'Break') {\n        setTimerLabel('Session');\n        setTimeLeft(sessionLengthSeconds * 60);\n      }\n    }\n\n  })\n\n\n\n\n\n\n  return  (\n    <div className=\"app-container\">\n      <div className=\"header-container\">\n        <h1 className=\"app-title\">Rebel-Cow Pomodoro Clock</h1>\n      </div>\n\n      <div className=\"timer-container\">\n      </div>\n\n      <div className=\"settings-container\">\n        <Break />\n        <Session />\n      </div>\n\n      <div className=\"sound-container\">\n        <audio id=\"beep\" ref={myAudio} src={soundfile} type=\"audio\"></audio>\n      </div>\n\n    </div>\n  )\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}