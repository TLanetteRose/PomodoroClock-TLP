{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/Break.js\";\nimport moment from 'moment';\nimport React from 'react';\n\nconst Break = ({\n  breakLengthSeconds,\n  incrementBreakLength,\n  decrementBreakLength\n}) => {\n  const breakLengthMinutes = moment.duration(breakLengthSeconds, \"s\").minutes(); //seconds to minutes conversion\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"break-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Break\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"break-length\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, breakLengthSeconds), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"break-increment\",\n    onClick: incrementBreakLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"break-decrement\",\n    onClick: decrementBreakLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"-\"));\n};\n\nexport default Break;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/components/Break.js"],"names":["moment","React","Break","breakLengthSeconds","incrementBreakLength","decrementBreakLength","breakLengthMinutes","duration","minutes"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,kBADW;AAEXC,EAAAA,oBAFW;AAGXC,EAAAA;AAHW,CAAD,KAIJ;AACN,QAAMC,kBAAkB,GAAGN,MAAM,CAC5BO,QADsB,CACbJ,kBADa,EACO,GADP,EAEtBK,OAFsB,EAA3B,CADM,CAGU;;AAEhB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,EAAE,EAAC,aAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAG,IAAA,EAAE,EAAC,cAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,kBAAtB,CAFJ,eAGI;AAAQ,IAAA,EAAE,EAAC,iBAAX;AAA6B,IAAA,OAAO,EAAEC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,eAII;AAAQ,IAAA,EAAE,EAAC,iBAAX;AAA6B,IAAA,OAAO,EAAEC,oBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADJ;AAQH,CAjBD;;AAmBA,eAAeH,KAAf","sourcesContent":["import moment from 'moment';\nimport React from 'react';\n\nconst Break = ({\n    breakLengthSeconds,\n    incrementBreakLength,\n    decrementBreakLength,\n    }) => {\n    const breakLengthMinutes = moment\n        .duration(breakLengthSeconds, \"s\")\n        .minutes(); //seconds to minutes conversion\n\n    return (\n        <div>\n            <p id=\"break-label\">Break</p>\n            <p id=\"break-length\">{breakLengthSeconds}</p>\n            <button id=\"break-increment\" onClick={incrementBreakLength}>+</button>\n            <button id=\"break-decrement\" onClick={decrementBreakLength}>-</button>\n        </div>\n    );\n};\n\nexport default Break;"]},"metadata":{},"sourceType":"module"}