{"ast":null,"code":"var _jsxFileName = \"/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js\";\n//import React, {useState} from 'react';\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../src/styles/App.css';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft'; //import Controllers from './components/Controllers';\n//import Sound from './components/Sound';\n//Dev-To AryanJ Tutorial in commented out sections\n\nfunction App() {\n  const [breakLengthSeconds, setBreakLength] = useState(300);\n  const [sessionLengthSeconds, setSessionLength] = useState(1500);\n  const audioElement = useRef(null);\n  const [currentSessionType, setCurrentSessionType] = useState('Session');\n  const [intervalId, setIntervalId] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(sessionLengthSeconds); // change timeLeft when sessionLength changes\n\n  useEffect(() => {\n    setTimeLeft(sessionLengthSeconds);\n  }, [sessionLengthSeconds]);\n\n  const decrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds - 60;\n\n    if (newBreakLength > 0) {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds + 60;\n\n    if (newBreakLength <= 60 * 5) {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const decrementSessionLength = () => {\n    const newSessionLength = sessionLengthSeconds - 60;\n\n    if (newSessionLength > 0) {\n      setSessionLength(newSessionLength);\n    }\n  };\n\n  const incrementSessionLength = () => {\n    const newSessionLength = sessionLengthSeconds + 60;\n\n    if (newSessionLength <= 60 * 25) {\n      setSessionLength(sessionLengthSeconds + 60);\n    }\n  }; //Timer\n\n\n  const isStarted = intervalId !== null;\n\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      const newIntervalId = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1;\n\n          if (newTimeLeft >= 0) {\n            return newTimeLeft;\n          } // time left is less than zero\n\n\n          audioElement.current.play(); // if session: \n\n          if (currentSessionType === 'Session') {\n            //switch to break\n            setCurrentSessionType('Break'); // setTimeLeft to breakLength\n\n            return breakLengthSeconds;\n          } // if break:\n          else if (currentSessionType === 'Break') {\n              //switch to session\n              setCurrentSessionType('Session'); //setTimeLeft to sessionLength\n\n              return sessionLengthSeconds;\n            }\n        });\n      }, 100);\n      setIntervalId(newIntervalId);\n    }\n  }; //Reset \n\n\n  const handleResetBtnClick = () => {\n    //reset audio\n    audioElement.current.load(); //clear timeout interval\n\n    clearInterval(intervalId); //set intervalId null\n\n    setIntervalId(null); //set the sessiontype to 'Session'\n\n    setCurrentSessionType('Session'); //reset the session length to 25 minutes \n\n    setSessionLength(25); //reset the break length to 5 minutes\n\n    setBreakLength(5); //reset the timer to 25 minutes (initial session length)\n\n    setTimeLeft(25);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Rebel-Cow Pomodoro Clock\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeleft-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimeLeft, {\n    handleResetBtnClick: handleResetBtnClick,\n    handleStartStopClick: handleStartStopClick,\n    timerLabel: currentSessionType,\n    startStopButtonLabel: isStarted ? 'Stop' : 'Start',\n    timeLeft: timeLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"settings-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Break, {\n    breakLengthSeconds: breakLengthSeconds,\n    incrementBreakLength: incrementBreakLength,\n    decrementBreakLength: decrementBreakLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Session, {\n    sessionLengthSeconds: sessionLengthSeconds,\n    incrementSessionLength: incrementSessionLength,\n    decrementSessionLength: decrementSessionLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"beep\",\n    preload: \"auto\",\n    ref: audioElement,\n    src: \"../public/tolling-bell_daniel-simion. mp3\",\n    type: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"footer-attribute\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"React JS Pomodoro Clock App created by\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/TLanetteRose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \" T.Lanette Pollard \")), \" \", \"\\xA0 FreeCodeCamp Front End Libraries Project\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/TLanPollard 1/Documents/GitHub/PomodoroClock-TLP/pomodoroclock-tlp/src/App.js"],"names":["React","useState","useEffect","useRef","Break","Session","TimeLeft","App","breakLengthSeconds","setBreakLength","sessionLengthSeconds","setSessionLength","audioElement","currentSessionType","setCurrentSessionType","intervalId","setIntervalId","timeLeft","setTimeLeft","decrementBreakLength","newBreakLength","incrementBreakLength","decrementSessionLength","newSessionLength","incrementSessionLength","isStarted","handleStartStopClick","clearInterval","newIntervalId","setInterval","prevTimeLeft","newTimeLeft","current","play","handleResetBtnClick","load"],"mappings":"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","sourcesContent":["//import React, {useState} from 'react';\nimport React, {useState, useEffect, useRef} from 'react';\nimport '../src/styles/App.css';\n\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport TimeLeft from './components/TimeLeft';\n//import Controllers from './components/Controllers';\n//import Sound from './components/Sound';\n\n\n\n//Dev-To AryanJ Tutorial in commented out sections\nfunction App() {\n  const [breakLengthSeconds, setBreakLength] = useState(300);\n  const [sessionLengthSeconds, setSessionLength] = useState(1500);\n  const audioElement = useRef(null);\n  const[currentSessionType, setCurrentSessionType] = useState('Session');\n  const[intervalId, setIntervalId] = useState(null);\n  const[timeLeft, setTimeLeft] = useState(sessionLengthSeconds);\n\n// change timeLeft when sessionLength changes\n  useEffect(() => {\n    setTimeLeft(sessionLengthSeconds);\n  }, [sessionLengthSeconds]);\n\n  const decrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds - 60;\n    if (newBreakLength > 0) {\n      setBreakLength(newBreakLength);\n    }\n  };\n\n  const incrementBreakLength = () => {\n    const newBreakLength = breakLengthSeconds + 60;\n    if (newBreakLength <= 60 * 5) {\n    setBreakLength(newBreakLength);\n    }\n  };\n\n  const decrementSessionLength = () => {\n    const newSessionLength = sessionLengthSeconds - 60;\n    if (newSessionLength > 0) {\n      setSessionLength(newSessionLength);\n    } \n  };\n\n  const incrementSessionLength = () => {\n    const newSessionLength = sessionLengthSeconds + 60;\n    if (newSessionLength <= 60 * 25) {\n      setSessionLength(sessionLengthSeconds + 60);\n    }\n};\n  //Timer\n\n  const isStarted = intervalId !== null;\n  const handleStartStopClick = () => {\n    if (isStarted) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    } else {\n      const newIntervalId = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1;\n          if (newTimeLeft >= 0) {\n            return newTimeLeft;\n          }\n          // time left is less than zero\n          audioElement.current.play();\n          // if session: \n          if (currentSessionType === 'Session') {\n            //switch to break\n            setCurrentSessionType('Break');\n            // setTimeLeft to breakLength\n            return breakLengthSeconds;\n          }\n          // if break:\n          else if (currentSessionType === 'Break') {\n            //switch to session\n            setCurrentSessionType('Session');\n            //setTimeLeft to sessionLength\n            return sessionLengthSeconds;\n          }\n        });\n      }, 100);\n      setIntervalId(newIntervalId);\n    }\n  };\n\n  //Reset \n  const handleResetBtnClick = () => {\n    //reset audio\n    audioElement.current.load();\n    //clear timeout interval\n    clearInterval(intervalId);\n    //set intervalId null\n    setIntervalId(null);\n    //set the sessiontype to 'Session'\n    setCurrentSessionType('Session');\n    //reset the session length to 25 minutes \n    setSessionLength(25);\n    //reset the break length to 5 minutes\n    setBreakLength(5);\n    //reset the timer to 25 minutes (initial session length)\n    setTimeLeft(25);\n  };\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"header-container\">\n          <h1 className=\"app-title\">Rebel-Cow Pomodoro Clock</h1>\n        </div>\n\n        <div className=\"timeleft-container\">\n          <TimeLeft \n          handleResetBtnClick={handleResetBtnClick}\n          handleStartStopClick={handleStartStopClick}\n          timerLabel={currentSessionType}\n          startStopButtonLabel={isStarted ? 'Stop' : 'Start'}\n          timeLeft={timeLeft} />\n        </div>\n        \n        <div className=\"settings-container\">\n          <Break\n            breakLengthSeconds={breakLengthSeconds}\n            incrementBreakLength={incrementBreakLength}\n            decrementBreakLength={decrementBreakLength}\n          />\n          <Session\n            sessionLengthSeconds={sessionLengthSeconds}\n            incrementSessionLength={incrementSessionLength}\n            decrementSessionLength={decrementSessionLength}\n          />\n        </div>\n        <audio id=\"beep\" preload=\"auto\" ref={audioElement} src=\"../public/tolling-bell_daniel-simion. mp3\" type=\"audio/mpeg\">\n        </audio>\n       \n        <div className=\"footer\">\n          <h3 className=\"footer-attribute\">\n            React JS Pomodoro Clock App created by{\" \"}\n            <a href=\"https://github.com/TLanetteRose\">\n              {\" \"}\n              <span> T.Lanette Pollard </span>\n            </a>{\" \"}\n            &nbsp; FreeCodeCamp Front End Libraries Project\n          </h3>\n        </div>\n      </div>\n    );\n  \n}\n\n\n\n\nexport default App;\n  "]},"metadata":{},"sourceType":"module"}